{"version":3,"sources":["components/AdminPage.tsx","data/AOI_JSON.ts","components/BountyMapContainer.tsx","components/InputMapContainer.tsx","components/InputPage.tsx","components/UserPage.tsx","components/LandingPage.tsx","data/UserMetadataRepo.ts","data/BountyMetadataRepo.ts","data/MapRepo.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["AdminPage","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bountyId","any","fulfillmentId","percentage","acceptSubmission","bind","assertThisInitialized","distributePayouts","sendRoyaltyDistribution","console","log","acceptFufillment","react_default","a","createElement","card","title","bordered","style","width","es_button","onClick","Component","mockData","type","name","crs","properties","features","fid","author","totalPool","bountyPercent","royaltyPercent","dateCreated","bountyExpires","royaltyExpires","bountyRamp","royaltyRamp","poolContract","geometry","coordinates","BountyMapContainer","_Component","apply","arguments","inherits","createClass","key","value","mapProps","map","google","data","setStyle","icon","path","maps","SymbolPath","CIRCLE","fillColor","strokeColor","strokeWeight","fillOpacity","scale","setTimeout","setZoom","loadGeoJson","Fragment","list","size","dataSource","renderItem","item","Item","Link","to","concat","dist","zoom","initialCenter","lat","lng","fullscreenControl","streetViewControl","onReady","loadGeojson","String","process","GoogleApiWrapper","apiKey","InputMapContainer","polyline","polygon","submitting","showSuccessModal","addLatLng","onMapReady","submitStructure","dismissSuccess","Polyline","strokeOpacity","setMap","addListener","event","linePath","getPath","push","latLng","polygonCoords","i","getLength","pt","getAt","Polygon","paths","editable","setPath","Marker","position","draggable","_this2","setState","geoJson","polylineFeature","addGeoJson","toGeoJson","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","inputComplete","t0","stop","_x","spin","spinning","tip","feature","fontWeight","fontSize","gestureHandling","bottom","right","shape","loading","modal","visible","footer","mockDataFindById","id","find","f","Number","InputPage","match","params","submitBounty","loadBountyInfo","_loadBountyInfo","bounty","getBounty","sent","geoData","components_InputMapContainer","Option","es_select","Meta","UserPage","kickoffBlocknative","top","zIndex","padding","actions","skeleton","avatar","active","description","color","margin","bodyStyle","display","justifyContent","defaultValue","LandingPage","className","BrowserRouter","Route","exact","component","BountyMap","render","routerProps","components_InputPage","web3","components_AdminPage","getUserPastEvents","getBounties","components_UserPage","UserMetadataRepo","Map","set","bio","imgUrl","userId","get","BountyMetadataRepo","MapRepo","dataToAdd","currentData","toConsumableArray","setMapData","App","portis","userLoggedIn","BN","standardBountiesInstance","tokenInstance","contractsConnected","contractEvents","userMetadataRepo","bountyMetadataRepo","mapDataRepo","portisClicked","blocknativeClicked","acceptFulfillment","setWeb3","Web3","providers","HttpProvider","Promise","resolve","reject","Portis","onLogin","walletAddress","provider","showPortis","assistInstance","assist","dappId","networkId","onboard","result","msg","getPastEvents","fromBlock","toBlock","error","events","userAddress","filter","owner","utils","eth","getAccounts","accounts","initContractInstances","subscribeToPastEvents","window","ethereum","enable","sendTransaction","currentProvider","methods","fulfillBounty","send","from","address","balanceOf","Contract","StandardBountiesAbi","HumanStandardTokenAbi","bounties","getNumBounties","numBounties","Error","bountyData","issuer","deadline","fulfillmentAmount","paysTokens","bountyStage","balance","getBountyData","bountyDataKey","getBountyMetadata","metadata","arbiter","user","getUserStats","userStats","bountiesWon","royaltiesWon","getUserMetadata","acceptFulfillmentPartial","distributeRoyaltyFundsSimple","dummyData","components_LandingPage","Boolean","location","hostname","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,iBAAkB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,kBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAoB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAoB,iBAAkB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,kBAAmB,CAAC,mBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,kBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,kBAAmB,CAAC,oBAAqB,kBAAmB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,kBAAqB,mBAAoB,CAAC,mBAAqB,kBAAmB,CAAC,mBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,kBAAmB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,kBAAmB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,kBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,kBAAmB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,kBAAmB,CAAC,kBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAoB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAoB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,kBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,kBAAmB,CAAC,mBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,kBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAoB,mBAAoB,CAAC,mBAAqB,iBAAkB,CAAC,mBAAoB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAoB,mBAAoB,CAAC,mBAAoB,mBAAoB,CAAC,oBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAoB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,kBAAmB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAoB,kBAAmB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,kBAAmB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,kBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,kBAAmB,CAAC,kBAAqB,mBAAoB,CAAC,iBAAkB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,iBAAkB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,kBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAoB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,iBAAqB,mBAAoB,CAAC,mBAAoB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,iBAAqB,kBAAmB,CAAC,mBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,kBAAmB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,kBAAmB,mBAAoB,CAAC,mBAAoB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,kBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,kBAAmB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAoB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,kBAAqB,mBAAoB,CAAC,oBAAqB,kBAAmB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAoB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,kBAAmB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,iBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,iBAAqB,mBAAoB,CAAC,mBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,kBAAmB,CAAC,mBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,kBAAmB,CAAC,oBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAoB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,kBAAmB,CAAC,oBAAqB,kBAAmB,CAAC,oBAAqB,mBAAoB,CAAC,kBAAqB,iBAAkB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAoB,mBAAoB,CAAC,oBAAqB,kBAAmB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,kBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAoB,mBAAoB,CAAC,kBAAmB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,iBAAkB,CAAC,oBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,iBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAoB,mBAAoB,CAAC,iBAAqB,mBAAoB,CAAC,oBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAoB,kBAAmB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,kBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,iBAAkB,mBAAoB,CAAC,kBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,kBAAmB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,oBAAqB,mBAAoB,CAAC,mBAAqB,kBAAmB,CAAC,kBAAqB,mBAAoB,CAAC,mBAAqB,mBAAoB,CAAC,mBAAqB,mB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","file":"static/js/main.3b671cb9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Card } from 'antd';\nimport { Bounty } from '../definitions/entities/entities';\nimport { any } from 'prop-types';\n\ninterface IAdminPageProps {\n  web3: any;\n  sendRoyaltyDistribution: () => void;\n  getUserPastEvents: (userAddress: string) => void;\n  getBounties: () => Promise<Bounty[]>;\n  acceptFufillment: (\n    bountyId: any,\n    fulfillmentId: any,\n    percentage: number\n  ) => void;\n}\n\nclass AdminPage extends Component<IAdminPageProps> {\n  state = {\n    bountyId: any,\n    fulfillmentId: any,\n    percentage: any\n  };\n\n  constructor(props: IAdminPageProps) {\n    super(props);\n    this.acceptSubmission = this.acceptSubmission.bind(this);\n    this.distributePayouts = this.distributePayouts.bind(this);\n  }\n\n  distributePayouts() {\n    this.props.sendRoyaltyDistribution();\n    console.log('button clicked');\n  }\n\n  acceptSubmission() {\n    this.props.acceptFufillment(1, 0, 25);\n    console.log('button clicked');\n  }\n\n  render() {\n    return (\n      <div>\n        <Card title=\"Admin Page\" bordered={false} style={{ width: '100%' }}>\n          <p>Card content</p>\n          <Button onClick={this.distributePayouts}>Distribute Payouts</Button>\n          <Button onClick={this.acceptSubmission}>Accept Submission</Button>\n        </Card>\n      </div>\n    );\n  }\n}\nexport default AdminPage;\n","export interface BasicProperties {\n  name: string;\n}\nexport interface BountyProperties extends BasicProperties {\n  fid: number;\n  author?: string | null;\n  totalPool?: number | null;\n  bountyPercent?: number | null;\n  royaltyPercent?: number | null;\n  dateCreated?: string | null;\n  bountyExpires?: string | null;\n  royaltyExpires?: string | null;\n  bountyRamp?: string | null;\n  royaltyRamp?: string | null;\n  poolContract?: string | null;\n}\n\nexport interface Crs {\n  type: string;\n  properties: BasicProperties;\n}\nexport interface Geometry {\n  type: string;\n  coordinates: number[][][];\n}\nexport interface Feature {\n  type: string;\n  properties: BountyProperties;\n  geometry: Geometry;\n  formattedPoints?: FormattedPoint[];\n}\nexport interface FormattedPoint {\n  lat: number;\n  lng: number;\n}\nexport interface GeoData {\n  type: string;\n  name: string;\n  crs: Crs;\n  features: Feature[];\n}\n\nexport const mockData: GeoData = {\n  \"type\": \"FeatureCollection\",\n  \"name\": \"AOI_EPSG4326\",\n  \"crs\": { \"type\": \"name\", \"properties\": { \"name\": \"urn:ogc:def:crs:OGC:1.3:CRS84\" } },\n  \"features\": [\n    { \"type\": \"Feature\", \"properties\": { \"fid\": 1, \"name\": \"Garissa River Flood Basin\", \"author\": \"0xE66317487077b5f5E107fe29d415DC4b347a2f38\", \"totalPool\": 760000.0, \"bountyPercent\": 25.0, \"royaltyPercent\": 75.0, \"dateCreated\": \"2019\\/02\\/15\", \"bountyExpires\": \"2019\\/06\\/30\", \"royaltyExpires\": \"2022\\/12\\/31\", \"bountyRamp\": \"standard linear\", \"royaltyRamp\": \"exponential decay\", \"poolContract\": \"0xf57D1955e785973B71dD92136a902A1ef1687A31\" }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[39.52735627068391, -3.96088006201972], [39.590618386750762, -3.960553968637932], [39.591596666896123, -4.017946403832604], [39.672467825579531, -4.01859859059618], [39.716490432120899, -4.041751220703121], [39.678663599833499, -4.090013041207732], [39.526731458650538, -4.089194125162373], [39.52735627068391, -3.96088006201972]]] } },\n    { \"type\": \"Feature\", \"properties\": { \"fid\": 2, \"name\": \"Northeast Airport Services Project\", \"author\": \"0x3bf9DA4eaDFc08058C1c97F7Cae633dCd84df456\", \"totalPool\": 125000.0, \"bountyPercent\": 60.0, \"royaltyPercent\": 40.0, \"dateCreated\": \"2019\\/02\\/20\", \"bountyExpires\": \"2019\\/03\\/31\", \"royaltyExpires\": \"2019\\/05\\/15\", \"bountyRamp\": \"flat\", \"royaltyRamp\": \"flat\", \"poolContract\": \"0x6b9EE0F490e839c3aC380bAd2fE987a048263e65\" }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[39.594527269552827, -4.015623990313648], [39.594330626154601, -4.045513786845011], [39.655486723004955, -4.045513786845011], [39.653716932420863, -4.014837416720717], [39.594527269552827, -4.015623990313648]]] } },\n    { \"type\": \"Feature\", \"properties\": { \"fid\": 6, \"name\": \"Port Oil Spill Remediation\", \"author\": \"0xE66317487077b5f5E107fe29d415DC4b347a2f38\", \"totalPool\": 50000.0, \"bountyPercent\": 90.0, \"royaltyPercent\": 10.0, \"dateCreated\": \"2018\\/02\\/19\", \"bountyExpires\": \"2019\\/02\\/22\", \"royaltyExpires\": \"2019\\/03\\/16\", \"bountyRamp\": \"flat\", \"royaltyRamp\": \"flat\", \"poolContract\": \"0xd56dF3e437Cf54405c41e6501D77f95A1c9eA9B5\" }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[39.65811971678086, -4.038762813384774], [39.658449313498956, -4.038765689731757], [39.658778809818706, -4.038774317896544], [39.659108105372326, -4.03878869525091], [39.659437099853207, -4.038808817415377], [39.659765693046445, -4.038834678260535], [39.660093784859363, -4.038866269908922], [39.660421275352029, -4.038903582737417], [39.660748064767652, -4.038946605380169], [39.66107405356302, -4.038995324732066], [39.661399142438782, -4.03904972595272], [39.661723232369724, -4.039109792470992], [39.662046224634906, -4.039175505990039], [39.662368020847758, -4.039246846492888], [39.662688522986038, -4.039323792248529], [39.663007633421692, -4.03940631981854], [39.663325254950585, -4.039494404064223], [39.66364129082212, -4.039588018154266], [39.66395564476872, -4.039687133572907], [39.664268221035115, -4.039791720128632], [39.664578924407557, -4.039901745963361], [39.664887660242783, -4.040017177562159], [39.665194334496867, -4.040137979763445], [39.66549885375386, -4.040264115769696], [39.665801125254248, -4.040395547158663], [39.66610105692321, -4.040532233895073], [39.666398557398644, -4.040674134342821], [39.666693536059022, -4.040821205277656], [39.666985903050993, -4.040973401900345], [39.667275569316743, -4.041130677850325], [39.667562446621112, -4.041292985219818], [39.667846447578498, -4.041460274568425], [39.668127485679456, -4.041632494938191], [39.668405475317066, -4.041809593869123], [39.668680331812979, -4.04199151741517], [39.668951971443256, -4.042178210160659], [39.669220311463825, -4.04236961523717], [39.669485270135716, -4.042565674340865], [39.669746766749959, -4.042766327750238], [39.670004721652148, -4.04297151434432], [39.670259056266723, -4.043181171621284], [39.670509693120891, -4.043395235717494], [39.670756555868238, -4.043613641426953], [39.670999569311988, -4.043836322221165], [39.671238659427885, -4.044063210269404], [39.671473753386771, -4.044294236459372], [39.671704779576736, -4.044529330418253], [39.671931667624975, -4.044768420534152], [39.672154348419184, -4.0450114339779], [39.672372754128645, -4.045258296725251], [39.672586818224858, -4.045508933579419], [39.672796475501819, -4.045763268193991], [39.673001662095899, -4.046021223096179], [39.673202315505272, -4.046282719710423], [39.673398374608965, -4.046547678382318], [39.673589779685479, -4.046816018402887], [39.673776472430966, -4.047087658033161], [39.673958395977017, -4.047362514529077], [39.674135494907951, -4.047640504166683], [39.674307715277713, -4.047921542267644], [39.674475004626323, -4.04820554322503], [39.674637311995809, -4.048492420529399], [39.67479458794579, -4.048782086795146], [39.674946784568483, -4.049074453787119], [39.67509385550332, -4.0493694324475], [39.675235755951064, -4.049666932922934], [39.675372442687475, -4.04996686459189], [39.675503874076441, -4.05026913609228], [39.675630010082692, -4.050573655349275], [39.675750812283979, -4.050880329603359], [39.675866243882773, -4.051189065438585], [39.675976269717502, -4.051499768811025], [39.676080856273231, -4.051812345077423], [39.676179971691873, -4.05212669902402], [39.676273585781914, -4.05244273489556], [39.676361670027596, -4.052760356424452], [39.676444197597604, -4.053079466860104], [39.676521143353249, -4.053399968998384], [39.676592483856098, -4.053721765211238], [39.676658197375147, -4.05404475747642], [39.676718263893413, -4.05436884740736], [39.676772665114072, -4.054693936283123], [39.676821384465967, -4.05501992507849], [39.676864407108717, -4.055346714494115], [39.676901719937213, -4.055674204986776], [39.6769333115856, -4.056002296799696], [39.676959172430756, -4.056330889992933], [39.676979294595228, -4.056659884473815], [39.676993671949589, -4.056989180027437], [39.677002300114374, -4.057318676347183], [39.677005176461364, -4.057648273065282], [39.677002300114374, -4.057977869783381], [39.676993671949589, -4.058307366103127], [39.676979294595228, -4.058636661656749], [39.676959172430756, -4.058965656137631], [39.6769333115856, -4.059294249330867], [39.676901719937213, -4.059622341143788], [39.676864407108717, -4.059949831636449], [39.676821384465967, -4.060276621052074], [39.676772665114072, -4.06060260984744], [39.676718263893413, -4.060927698723203], [39.676658197375147, -4.061251788654143], [39.676592483856098, -4.061574780919326], [39.676521143353249, -4.061896577132179], [39.676444197597604, -4.06221707927046], [39.676361670027596, -4.062536189706112], [39.676273585781914, -4.062853811235004], [39.676179971691873, -4.063169847106543], [39.676080856273231, -4.06348420105314], [39.675976269717502, -4.063796777319538], [39.675866243882773, -4.064107480691979], [39.675750812283979, -4.064416216527205], [39.675630010082692, -4.064722890781289], [39.675503874076441, -4.065027410038284], [39.675372442687475, -4.065329681538674], [39.675235755951064, -4.065629613207631], [39.67509385550332, -4.065927113683063], [39.674946784568483, -4.066222092343445], [39.67479458794579, -4.066514459335418], [39.674637311995809, -4.066804125601164], [39.674475004626323, -4.067091002905534], [39.674307715277713, -4.06737500386292], [39.674135494907951, -4.067656041963881], [39.673958395977017, -4.067934031601487], [39.673776472430966, -4.068208888097403], [39.673589779685479, -4.068480527727677], [39.673398374608965, -4.068748867748246], [39.673202315505272, -4.069013826420141], [39.673001662095899, -4.069275323034384], [39.672796475501819, -4.069533277936572], [39.672586818224858, -4.069787612551145], [39.672372754128645, -4.070038249405313], [39.672154348419184, -4.070285112152663], [39.671931667624975, -4.070528125596412], [39.671704779576736, -4.07076721571231], [39.671473753386771, -4.071002309671192], [39.671238659427885, -4.07123333586116], [39.670999569311988, -4.071460223909399], [39.670756555868238, -4.071682904703611], [39.670509693120891, -4.07190131041307], [39.670259056266723, -4.07211537450928], [39.670004721652148, -4.072325031786245], [39.669746766749959, -4.072530218380326], [39.669485270135716, -4.072730871789699], [39.669220311463825, -4.072926930893393], [39.668951971443256, -4.073118335969904], [39.668680331812979, -4.073305028715394], [39.668405475317066, -4.073486952261441], [39.668127485679456, -4.073664051192373], [39.667846447578498, -4.073836271562139], [39.667562446621112, -4.074003560910746], [39.667275569316743, -4.074165868280239], [39.666985903050993, -4.074323144230219], [39.666693536059022, -4.074475340852908], [39.666398557398644, -4.074622411787743], [39.66610105692321, -4.074764312235491], [39.665801125254248, -4.0749009989719], [39.66549885375386, -4.075032430360868], [39.665194334496867, -4.075158566367119], [39.664887660242783, -4.075279368568404], [39.664578924407557, -4.075394800167203], [39.664268221035115, -4.075504826001932], [39.66395564476872, -4.075609412557657], [39.66364129082212, -4.075708527976298], [39.663325254950585, -4.07580214206634], [39.663007633421692, -4.075890226312024], [39.662688522986038, -4.075972753882035], [39.662368020847758, -4.076049699637676], [39.662046224634906, -4.076121040140524], [39.661723232369724, -4.076186753659572], [39.661399142438782, -4.076246820177844], [39.66107405356302, -4.076301221398498], [39.660748064767652, -4.076349940750394], [39.660421275352029, -4.076392963393147], [39.660093784859363, -4.076430276221641], [39.659765693046445, -4.076461867870028], [39.659437099853207, -4.076487728715187], [39.659108105372326, -4.076507850879653], [39.658778809818706, -4.07652222823402], [39.658449313498956, -4.076530856398807], [39.65811971678086, -4.07653373274579], [39.657790120062764, -4.076530856398807], [39.657460623743013, -4.07652222823402], [39.657131328189394, -4.076507850879653], [39.656802333708512, -4.076487728715187], [39.656473740515274, -4.076461867870028], [39.656145648702356, -4.076430276221641], [39.655818158209691, -4.076392963393147], [39.655491368794067, -4.076349940750394], [39.655165379998699, -4.076301221398498], [39.654840291122937, -4.076246820177844], [39.654516201191996, -4.076186753659572], [39.654193208926813, -4.076121040140524], [39.653871412713961, -4.076049699637676], [39.653550910575682, -4.075972753882035], [39.653231800140027, -4.075890226312024], [39.652914178611141, -4.07580214206634], [39.652598142739599, -4.075708527976298], [39.652283788793, -4.075609412557657], [39.651971212526604, -4.075504826001932], [39.651660509154162, -4.075394800167203], [39.651351773318936, -4.075279368568404], [39.651045099064852, -4.075158566367119], [39.650740579807859, -4.075032430360868], [39.650438308307471, -4.0749009989719], [39.650138376638509, -4.074764312235491], [39.649840876163076, -4.074622411787743], [39.649545897502698, -4.074475340852908], [39.649253530510727, -4.074323144230219], [39.648963864244976, -4.074165868280239], [39.648676986940607, -4.074003560910747], [39.648392985983222, -4.073836271562139], [39.648111947882263, -4.073664051192373], [39.647833958244654, -4.073486952261441], [39.64755910174874, -4.073305028715394], [39.647287462118463, -4.073118335969904], [39.647019122097895, -4.072926930893393], [39.646754163426003, -4.072730871789699], [39.64649266681176, -4.072530218380326], [39.646234711909571, -4.072325031786245], [39.645980377294997, -4.07211537450928], [39.645729740440828, -4.07190131041307], [39.645482877693482, -4.071682904703611], [39.645239864249731, -4.071460223909399], [39.645000774133834, -4.07123333586116], [39.644765680174949, -4.071002309671192], [39.644534653984984, -4.07076721571231], [39.644307765936745, -4.070528125596412], [39.644085085142535, -4.070285112152663], [39.643866679433074, -4.070038249405313], [39.643652615336862, -4.069787612551145], [39.6434429580599, -4.069533277936572], [39.64323777146582, -4.069275323034384], [39.643037118056448, -4.069013826420141], [39.642841058952754, -4.068748867748246], [39.642649653876241, -4.068480527727677], [39.642462961130754, -4.068208888097403], [39.642281037584702, -4.067934031601487], [39.642103938653769, -4.067656041963881], [39.641931718284006, -4.06737500386292], [39.641764428935396, -4.067091002905534], [39.64160212156591, -4.066804125601164], [39.641444845615929, -4.066514459335417], [39.641292648993236, -4.066222092343445], [39.641145578058399, -4.065927113683063], [39.641003677610655, -4.06562961320763], [39.640866990874244, -4.065329681538674], [39.640735559485279, -4.065027410038284], [39.640609423479027, -4.064722890781288], [39.64048862127774, -4.064416216527205], [39.640373189678947, -4.064107480691979], [39.640263163844217, -4.063796777319538], [39.640158577288489, -4.06348420105314], [39.640059461869846, -4.063169847106543], [39.639965847779806, -4.062853811235004], [39.639877763534123, -4.062536189706112], [39.639795235964115, -4.06221707927046], [39.639718290208471, -4.061896577132179], [39.639646949705622, -4.061574780919326], [39.639581236186572, -4.061251788654143], [39.639521169668306, -4.060927698723203], [39.639466768447647, -4.06060260984744], [39.639418049095752, -4.060276621052074], [39.639375026453003, -4.059949831636449], [39.639337713624506, -4.059622341143788], [39.639306121976119, -4.059294249330867], [39.639280261130963, -4.058965656137631], [39.639260138966492, -4.058636661656749], [39.639245761612131, -4.058307366103127], [39.639237133447345, -4.057977869783381], [39.639234257100355, -4.057648273065282], [39.639237133447345, -4.057318676347183], [39.639245761612131, -4.056989180027437], [39.639260138966492, -4.056659884473815], [39.639280261130963, -4.056330889992933], [39.639306121976119, -4.056002296799696], [39.639337713624506, -4.055674204986776], [39.639375026453003, -4.055346714494115], [39.639418049095752, -4.05501992507849], [39.639466768447647, -4.054693936283123], [39.639521169668306, -4.05436884740736], [39.639581236186572, -4.05404475747642], [39.639646949705622, -4.053721765211238], [39.639718290208471, -4.053399968998384], [39.639795235964115, -4.053079466860104], [39.639877763534123, -4.052760356424452], [39.639965847779806, -4.05244273489556], [39.640059461869846, -4.05212669902402], [39.640158577288489, -4.051812345077423], [39.640263163844217, -4.051499768811025], [39.640373189678947, -4.051189065438585], [39.64048862127774, -4.050880329603359], [39.640609423479027, -4.050573655349275], [39.640735559485279, -4.05026913609228], [39.640866990874244, -4.04996686459189], [39.641003677610655, -4.049666932922933], [39.641145578058399, -4.0493694324475], [39.641292648993236, -4.049074453787119], [39.641444845615929, -4.048782086795145], [39.64160212156591, -4.048492420529399], [39.641764428935396, -4.04820554322503], [39.641931718284006, -4.047921542267644], [39.642103938653769, -4.047640504166683], [39.642281037584702, -4.047362514529077], [39.642462961130754, -4.047087658033161], [39.642649653876241, -4.046816018402887], [39.642841058952754, -4.046547678382318], [39.643037118056448, -4.046282719710423], [39.64323777146582, -4.046021223096179], [39.6434429580599, -4.045763268193991], [39.643652615336862, -4.045508933579419], [39.643866679433074, -4.045258296725251], [39.644085085142535, -4.0450114339779], [39.644307765936745, -4.044768420534152], [39.644534653984984, -4.044529330418253], [39.644765680174949, -4.044294236459372], [39.645000774133834, -4.044063210269404], [39.645239864249731, -4.043836322221165], [39.645482877693482, -4.043613641426953], [39.645729740440828, -4.043395235717494], [39.645980377294997, -4.043181171621284], [39.646234711909571, -4.042971514344319], [39.64649266681176, -4.042766327750238], [39.646754163426003, -4.042565674340865], [39.647019122097895, -4.04236961523717], [39.647287462118463, -4.042178210160659], [39.64755910174874, -4.04199151741517], [39.647833958244654, -4.041809593869123], [39.648111947882263, -4.041632494938191], [39.648392985983222, -4.041460274568425], [39.648676986940607, -4.041292985219818], [39.648963864244976, -4.041130677850325], [39.649253530510727, -4.040973401900345], [39.649545897502698, -4.040821205277656], [39.649840876163076, -4.040674134342821], [39.650138376638509, -4.040532233895073], [39.650438308307471, -4.040395547158663], [39.650740579807859, -4.040264115769696], [39.651045099064852, -4.040137979763445], [39.651351773318936, -4.040017177562159], [39.651660509154162, -4.039901745963361], [39.651971212526604, -4.039791720128632], [39.652283788793, -4.039687133572907], [39.652598142739599, -4.039588018154266], [39.652914178611134, -4.039494404064223], [39.653231800140027, -4.03940631981854], [39.653550910575682, -4.039323792248529], [39.653871412713961, -4.039246846492888], [39.654193208926813, -4.039175505990039], [39.654516201191996, -4.039109792470992], [39.654840291122937, -4.03904972595272], [39.655165379998699, -4.038995324732066], [39.655491368794067, -4.038946605380169], [39.655818158209691, -4.038903582737417], [39.656145648702356, -4.038866269908922], [39.656473740515274, -4.038834678260535], [39.656802333708512, -4.038808817415377], [39.657131328189394, -4.03878869525091], [39.657460623743013, -4.038774317896544], [39.657790120062764, -4.038765689731757], [39.65811971678086, -4.038762813384774]]] } },\n    { \"type\": \"Feature\", \"properties\": { \"fid\": 5, \"name\": \"South Kenya Master Project\", \"author\": \"0x0F1b5da3e5AA1AC434A070f45fDF27bAa3981908\", \"totalPool\": 5000000.0, \"bountyPercent\": 10.0, \"royaltyPercent\": 90.0, \"dateCreated\": \"2018\\/01\\/01\", \"bountyExpires\": \"2020\\/10\\/01\", \"royaltyExpires\": \"2023\\/08\\/31\", \"bountyRamp\": \"exponential\", \"royaltyRamp\": \"exponential\", \"poolContract\": \"0x52151DDaDD02509a401792610e259F5dC463608E\" }, \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [[[39.18956270800679, -4.638589163659124], [39.18956270800679, -3.608004631635024], [39.877185707636201, -3.608004631635024], [39.877185707636201, -4.638589163659124], [39.18956270800679, -4.638589163659124]]] } }\n  ]\n}\n","import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport { Card, List } from 'antd'\nimport { Link } from 'react-router-dom'\nimport { mockData } from '../data/AOI_JSON'\n\ninterface IMapContainerProps {\n  google?: any\n}\n\nexport class BountyMapContainer extends Component<IMapContainerProps> {\n  loadGeojson(mapProps: any, map: any) {\n    const { google } = mapProps\n    map.data.setStyle(() => {\n      return {\n        icon: {\n          path: google.maps.SymbolPath.CIRCLE,\n          fillColor: '#FF5E00',\n          strokeColor: '#5e3509',\n          strokeWeight: 2,\n        },\n\n        fillColor: '#FF5E00',\n        fillOpacity: 0.6,\n        strokeColor: '#5e3509',\n        strokeWeight: 2,\n        scale: 3\n      };\n    });\n    // 🤷‍♀️👨‍🔧\n    setTimeout(() => map.setZoom(7), 1600)\n    setTimeout(() => map.setZoom(8), 2000)\n    setTimeout(() => map.setZoom(9), 2200)\n    setTimeout(() => map.setZoom(10), 2400)\n    setTimeout(() => {\n      // load the bounty regions while zooming in\n      map.data.loadGeoJson('AOI_EPSG4326.json')\n      map.setZoom(11)\n    }, 2600)\n    setTimeout(() => {\n      map.setZoom(13)\n    }, 3100)\n    setTimeout(() => {\n      // add markers when zooming is complete\n      map.data.loadGeoJson('PointsClip_EPSG4326_Thin.json')\n    }, 3300)\n\n\n  }\n  render() {\n    return (\n      <>\n        <Card title=\"Bounty Areas\" bordered={false} style={{ width: '100%' }}>\n          <List\n            size=\"small\"\n            bordered={false}\n            dataSource={mockData.features}\n            renderItem={(item: any) => (<List.Item><Link to={`/bounty/${item.properties.fid}`} >{item.properties.name}</Link></List.Item>)}\n          />\n        </Card>\n        <Map\n          google={this.props.google}\n          zoom={4}\n          initialCenter={{\n            lat: -4.0385066,\n            lng: 39.649095\n          }}\n          fullscreenControl={false}\n          streetViewControl={false}\n          onReady={this.loadGeojson}\n        >\n        </Map>\n      </>\n    );\n  }\n}\n\nconst key = String(process.env.REACT_APP_GOOGLE_MAPS_KEY)\nexport default GoogleApiWrapper({\n  apiKey: (key)\n})(BountyMapContainer)\n","import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper } from 'google-maps-react'\nimport { Button, Card, Icon, Modal, Spin } from 'antd'\nimport { Feature } from '../data/AOI_JSON';\nimport { Link } from 'react-router-dom';\ninterface IInputMapContainerProps {\n  google?: any\n  inputComplete: (geoData: any) => Promise<any>\n  feature: Feature\n}\ninterface PolylineFeature {\n  type: string,\n  geometry: {\n    type: string,\n    coordinates: any[]\n  },\n  properties: {\n    [propKey: string]: any\n  }\n}\n\nexport class InputMapContainer extends Component<IInputMapContainerProps> {\n  polyline: any\n  polygon: any\n  map: any\n  google: any\n  state: {\n    submitting: boolean\n    showSuccessModal: boolean\n  }\n  constructor(props: IInputMapContainerProps) {\n    super(props)\n    this.state = {\n      submitting: false,\n      showSuccessModal: false\n\n    }\n    this.addLatLng = this.addLatLng.bind(this)\n    this.onMapReady = this.onMapReady.bind(this)\n    this.submitStructure = this.submitStructure.bind(this)\n    this.dismissSuccess = this.dismissSuccess.bind(this)\n  }\n  onMapReady(mapProps: any, map: any) {\n    // forgive me, but it works\n    setTimeout(() => map.setZoom(9), 1600)\n    setTimeout(() => map.setZoom(11), 2000)\n    setTimeout(() => map.setZoom(12), 2200)\n    setTimeout(() => map.setZoom(13), 2400)\n    setTimeout(() => map.setZoom(14), 2600)\n    setTimeout(() => map.setZoom(15), 2800)\n    setTimeout(() => map.setZoom(16), 3000)\n    setTimeout(() => map.setZoom(17), 3200)\n    setTimeout(() => map.setZoom(18), 3400)\n\n    const { google } = mapProps\n    this.google = google\n    this.map = map\n    this.polyline = new this.google.maps.Polyline({\n      strokeColor: '#FF5E00',\n      strokeOpacity: 1.0,\n      strokeWeight: 3\n    });\n    this.polyline.setMap(this.map);\n\n    // Add a listener for the click event\n    this.map.addListener('click', this.addLatLng);\n  }\n  addLatLng(event: any) {\n    var linePath = this.polyline.getPath();\n    // Because path is an MVCArray, we can simply append a new coordinate\n    // and it will automatically appear.\n    linePath.push(event.latLng);\n\n    // create polygon data\n    const polygonCoords = []\n    for (var i = 0; i < linePath.getLength(); i++) {\n      var pt = linePath.getAt(i)\n      const lat = pt.lat()\n      const lng = pt.lng()\n      if (lat && lng) {\n        polygonCoords.push({ lat, lng })\n      }\n    }\n\n    if (linePath.getLength() === 3) {\n      this.polygon = new this.google.maps.Polygon({\n        paths: polygonCoords,\n        strokeColor: '#FF5E00',\n        strokeOpacity: 0.8,\n        strokeWeight: 3,\n        fillColor: '#FF0000',\n        fillOpacity: 0.35,\n        editable: true\n      });\n\n      // draw a polygon\n      this.polygon.setMap(this.map)\n      // remove polyline\n      //this.polyline.setMap(null)\n    } else if (linePath.getLength() >= 3) {\n      this.polygon.setPath(polygonCoords);\n    }\n\n\n    // Add a new marker at the new plotted point on the polyline.\n    var marker = new this.google.maps.Marker({\n      position: event.latLng,\n      // name: 'marker name',\n      // title: '#' + linePath.getLength(),\n      map: this.map,\n      draggable: true,\n      icon: {\n        path: this.google.maps.SymbolPath.CIRCLE,\n        fillColor: '#FF5E00',\n        fillOpacity: 0.6,\n        strokeColor: '#000000',\n        strokeOpacity: 0.8,\n        strokeWeight: 2,\n        scale: 3\n      }\n    });\n  }\n\n  submitStructure() {\n    this.setState(() => ({\n      submitting: true\n    }))\n\n    var geoJson: {\n      type: string,\n      features: PolylineFeature[]\n    } = {\n      type: \"FeatureCollection\",\n      features: []\n    };\n    var polylineFeature: PolylineFeature = {\n      type: \"Feature\",\n      geometry: {\n        type: \"LineString\",\n        coordinates: []\n      },\n      properties: {},\n\n    };\n    for (var i = 0; i < this.polyline.getPath().getLength(); i++) {\n      var pt = this.polyline.getPath().getAt(i)\n      polylineFeature.geometry.coordinates.push([\n        pt.lng(), pt.lat()]);\n    }\n    geoJson.features.push(polylineFeature);\n\n    this.map.data.addGeoJson(geoJson);\n\n    this.map.data.setStyle({\n      fillColor: '#36db2e',\n      // fillOpacity: 0.,\n      strokeColor: '#3ae031',\n      strokeWeight: 4\n    });\n    this.map.data.toGeoJson(async (data: any) => {\n      console.log('toGeoJson, about to submit: ', data)\n      try {\n        await this.props.inputComplete(data)\n        console.log('input complete returned')\n        this.setState(() => ({\n          submitting: false,\n          showSuccessModal: true\n        }))\n\n      } catch (e) {\n        console.log('submit failed. e: ', e)\n      }\n\n    });\n  }\n  dismissSuccess() {\n    this.setState(() => ({\n      showSuccessModal: false\n    }))\n  }\n\n  render() {\n    return (\n      <>\n        <Spin spinning={this.state.submitting} tip=\"Storing your submission...\" >\n          <Card title={this.props.feature.properties.name} bordered={false} style={{ width: '100%' }}>\n            <div>\n              <p><span style={{ fontWeight: 500, fontSize: 16 }}>Objective: </span>Report areas with stagnant water</p>\n              <p><span style={{ fontWeight: 500, fontSize: 16 }}>Reward: </span> Each submission earns $4</p>\n              <p><span style={{ fontWeight: 500, fontSize: 16 }}>Timeframe: </span> Bounty expires on February 24th, 8:00am local time</p>\n            </div>\n          </Card>\n        </Spin>\n        <Map\n          google={this.props.google}\n          zoom={7}\n          initialCenter={{\n            lat: -4.002427,\n            lng: 39.5580713\n          }}\n          onReady={this.onMapReady}\n          fullscreenControl={false}\n          streetViewControl={false}\n          gestureHandling={'greedy'}\n        >\n        </Map>\n        <div style={{ position: 'absolute', bottom: 35, right: 85 }}>\n          <Button type=\"primary\" shape=\"circle\" size=\"large\" loading={this.state.submitting} onClick={this.submitStructure} ><Icon type=\"cloud-upload\" /></Button>\n        </div>\n        <Modal\n          title=\"Success!\"\n          visible={this.state.showSuccessModal}\n          footer={[\n            <Button key=\"submit\" type=\"primary\" onClick={this.dismissSuccess}>\n              Done\n            </Button>\n          ]}\n        >\n          <p>Your submission was accepted.</p>\n          <p>It will be reviewed, check the <Link to=\"/user\">users page</Link> for updates.</p>\n          <p>Thanks for contributing to Project Map.</p>\n        </Modal>\n\n      </>\n    );\n  }\n}\nconst key = String(process.env.REACT_APP_GOOGLE_MAPS_KEY)\nexport default GoogleApiWrapper({\n  apiKey: (key)\n})(InputMapContainer)\n","import React, { Component } from 'react';\nimport InputMapContainer from './InputMapContainer';\nimport { Feature, mockData } from '../data/AOI_JSON';\nimport { Bounty } from '../definitions/entities/entities';\n\nconst mockDataFindById = (id: number) => {\n  const { features } = mockData;\n  return features.find(f => f.properties.fid === Number(id));\n};\n\ninterface IInputPageProps {\n  match: any;\n  web3: any;\n  submitBounty?: (bountyId: number, data: any) => Promise<any>;\n  getBounty: (bountyId: number) => Promise<Bounty>;\n}\n\nexport class InputPage extends Component<IInputPageProps> {\n  state: {\n    feature: Feature;\n  };\n  constructor(props: IInputPageProps) {\n    super(props);\n    this.state = {\n      feature: mockDataFindById(props.match.params.id) as Feature\n    };\n    this.submitBounty = this.submitBounty.bind(this);\n    this.loadBountyInfo();\n  }\n  componentWillMount() {\n    const feature = mockDataFindById(this.props.match.params.id);\n    this.setState(() => ({\n      feature\n    }));\n  }\n\n  async loadBountyInfo() {\n    const bounty = await this.props.getBounty(this.props.match.params.id);\n    this.setState({ bounty: bounty });\n  }\n\n  submitBounty(geoData: any) {\n    console.log('InputPage.submitBounty() geoData: ', geoData);\n    if (this.props.submitBounty) {\n      return this.props.submitBounty(this.props.match.params.id, geoData);\n    }\n  }\n  render() {\n    console.log(\n      `inputPage rendered for bountyId: ${this.props.match.params.id}`\n    );\n    if (!this.state.feature) {\n      return null;\n    }\n    return (\n      <InputMapContainer\n        inputComplete={this.submitBounty}\n        feature={this.state.feature}\n      />\n    );\n    return <InputMapContainer inputComplete={this.submitBounty} />;\n  }\n}\n\nexport default InputPage;\n","import React, { Component } from 'react';\nimport { Skeleton, Button, Card, Icon, Avatar, List, Select } from 'antd';\nconst Option = Select.Option;\nimport { Link } from 'react-router-dom';\n\nconst { Meta } = Card;\n\ninterface IUserPageProps {\n  web3: any;\n  getUserPastEvents: (userAddress: string) => void;\n  kickoffBlocknative: () => void\n}\n\nclass UserPage extends Component<IUserPageProps> {\n  state: {\n    loading: boolean;\n  };\n  constructor(props: IUserPageProps) {\n    super(props);\n    this.state = {\n      loading: true\n    };\n  }\n  componentWillMount() {\n    setTimeout(() => {\n      this.setState(() => ({\n        loading: false\n      }));\n    }, 800);\n  }\n\n  render() {\n    const recentActivity = [\n      {\n        name: 'royalty 1',\n        id: '0x82b387f7228d2c91abb50f15ab27c1c16566ff7cf51923cfb8f4fe2269e7046e'\n      },\n      {\n        name: 'submission accepted',\n        id: '0x95f1c67f0252e61906b706de81fa0b8471af4ef7e9594ec32c8d02c0e074fa7b'\n      },\n      {\n        name: 'bounty submitted',\n        id: '0x93aa586501a9c8de0ff83caf6f74828556f3036dfcc54d28b480a723f1bfc4f0'\n      },\n      {\n        name: 'account created',\n        id: '0xe569ab943d21ffbacbe82e9986c6138ee41382dd7866f112299a4ce343962d44'\n      }\n    ];\n    const stats = [\n      'Submissions: 1',\n      'Accepted Submissions: 1',\n      'Rejected Submissions: 0',\n      'Submission earnings: $4.00',\n      'Royalty earnings: $0.32'\n    ];\n    const badges = [\n      { imageUrl: '/noob.jpg', title: 'Noob - submit for one bounty' }\n    ];\n    return (\n      <>\n        <Button\n          type=\"primary\"\n          onClick={this.props.kickoffBlocknative}\n          style={{ position: 'absolute', top: 48, right: 48, zIndex: 100 }}\n        >\n          Set up Wallet & Withdrawal\n      </Button>\n        <Card\n          style={{ width: '100%', padding: 12 }}\n          actions={[\n            <Icon type=\"setting\" />,\n            <Icon type=\"edit\" />,\n            <Icon type=\"ellipsis\" />\n          ]}\n        >\n          <Skeleton loading={this.state.loading} avatar active>\n            <Meta\n              avatar={<Avatar icon=\"user\" size=\"large\" />}\n              title=\"Total Earned: $4.32\"\n              description=\"Joined 18 Hours ago\"\n            />\n            <p\n              style={{\n                fontSize: 24,\n                color: 'rgba(0, 0, 0, 0.85)',\n                margin: 24,\n                fontWeight: 500\n              }}\n            >\n              Account Data\n          </p>\n            <Card type=\"inner\" title=\"Recent Activity\" style={{ margin: 4 }}>\n              <List\n                size=\"small\"\n                bordered={false}\n                dataSource={recentActivity}\n                renderItem={(item: any) => (\n                  <List.Item>\n                    {item.name}\n                    {` transaction:   `}\n                    <Link to={`/transaction/${item.id}`}>{item.id}</Link>\n                  </List.Item>\n                )}\n              />\n            </Card>\n            <Card type=\"inner\" title=\"Stats\" style={{ margin: 8 }}>\n              <List\n                size=\"small\"\n                bordered={false}\n                dataSource={stats}\n                renderItem={(item: string) => <List.Item>{item}</List.Item>}\n              />\n            </Card>\n            <Card type=\"inner\" title=\"Causes\" style={{ margin: 4 }} bodyStyle={{ display: 'flex', justifyContent: 'space-between' }}>\n\n              <Select defaultValue=\"unicef\" style={{ width: 160 }} >\n                <Option value=\"unicef\">UNICEF</Option>\n                <Option value=\"worldbank\">World Bank</Option>\n                <Option value=\"ethereumfoundation\">Ethereum Foundation</Option>\n              </Select>\n              <Button type=\"primary\">\n                Set Royalty Recipient\n              </Button>\n            </Card>\n          </Skeleton>\n        </Card>\n      </>\n    );\n  }\n}\nexport default UserPage;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport AdminPage from './AdminPage';\nimport BountyMap from './BountyMapContainer';\nimport InputPage from './InputPage';\nimport UserPage from './UserPage';\nimport { Bounty } from '../definitions/entities/entities';\n\ninterface ILandingPageProps {\n  web3: any;\n  sendRoyaltyDistribution: () => void;\n  getUserPastEvents: (userAddress: string) => void;\n  getBounties: () => Promise<Bounty[]>;\n  acceptFufillment: (\n    bountyId: any,\n    fulfillmentId: any,\n    percentage: number\n  ) => void;\n  getBounty: (bountyId: number) => Promise<Bounty>;\n  submitBounty?: (bountyId: number, data: any) => Promise<any>;\n  kickoffBlocknative: () => void\n}\nclass LandingPage extends Component<ILandingPageProps> {\n  constructor(props: ILandingPageProps) {\n    super(props);\n  }\n  render() {\n    return (\n      <div className=\"landing-page\">\n        <Router>\n          <>\n            <Route exact path=\"/\" component={BountyMap} />\n            <Route\n              path=\"/bounty/:id\"\n              render={routerProps => (\n                <InputPage\n                  web3={this.props.web3}\n                  match={routerProps.match}\n                  submitBounty={this.props.submitBounty}\n                  getBounty={this.props.getBounty}\n                />\n              )}\n            />\n            <Route\n              path=\"/admin\"\n              render={routerProps => (\n                <AdminPage\n                  web3={this.props.web3}\n                  sendRoyaltyDistribution={this.props.sendRoyaltyDistribution}\n                  getUserPastEvents={this.props.getUserPastEvents}\n                  getBounties={this.props.getBounties}\n                  acceptFufillment={this.props.acceptFufillment}\n                />\n              )}\n            />\n            <Route\n              path=\"/user\"\n              render={routerProps => (\n                <UserPage\n                  web3={this.props.web3}\n                  getUserPastEvents={this.props.getUserPastEvents}\n                  kickoffBlocknative={this.props.kickoffBlocknative}\n                />\n              )}\n            />\n          </>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default LandingPage;\n","import { User, UserMetadata } from '../definitions/entities/entities';\n\nexport class UserMetadataRepo {\n  private data: Map<string, UserMetadata>;\n  constructor() {\n    this.data = new Map<string, UserMetadata>();\n\n    //Dummy Data\n    this.set('0x05C95b1830EC6D511Cab7da8eAbA9b23a8ab10A4', {\n      name: 'Name',\n      bio: 'BIO',\n      imgUrl: 'asd'\n    });\n  }\n\n  get(userId: string) {\n    return this.data.get(userId);\n  }\n\n  set(userId: string, data: UserMetadata) {\n    this.data.set(userId, data);\n  }\n}\n","import { User, BountyMetadata } from '../definitions/entities/entities';\n\nexport class BountyMetadataRepo {\n  private data: Map<string, BountyMetadata>;\n  constructor() {\n    this.data = new Map<string, BountyMetadata>();\n  }\n\n  get(id: string) {\n    return this.data.get(id);\n  }\n\n  set(id: string, data: BountyMetadata) {\n    this.data.set(id, data);\n  }\n}\n","import { GeoData } from './AOI_JSON';\nimport { User, BountyMetadata } from '../definitions/entities/entities';\n\nexport class MapRepo {\n  private data: Map<string, GeoData[]>;\n  constructor() {\n    this.data = new Map<string, GeoData[]>();\n  }\n\n  getMapData(id: string): GeoData[] {\n    return this.data.get(id) || ([] as GeoData[]);\n  }\n\n  setMapData(id: string, data: GeoData[]) {\n    this.data.set(id, data);\n  }\n\n  addDataToMap(id: string, dataToAdd: GeoData[]) {\n    let currentData = this.data.get(id);\n    if (currentData) {\n      currentData.push(...dataToAdd);\n    } else {\n      this.setMapData(id, dataToAdd);\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport './App.less';\n\nimport { Button } from 'antd';\n\nimport Portis from '@portis/web3';\nimport Web3 from 'web3';\nimport * as assist from 'bnc-assist';\n\nimport StandardBountiesAbi from '../src/definitions/contractAbi/StandardBounties.json';\nimport HumanStandardTokenAbi from '../src/definitions/contractAbi/HumanStandardToken.json';\n\nimport LandingPage from './components/LandingPage';\nimport {\n  Bounty,\n  BountyMetadata,\n  User,\n  UserMetadata,\n  RoyaltyFinancesData,\n  RoyaltyDistribution,\n  RoyaltyOwnerInfo\n} from './definitions/entities/entities';\nimport { UserMetadataRepo } from './data/UserMetadataRepo';\nimport { BountyMetadataRepo } from './data/BountyMetadataRepo';\nimport { MapRepo } from './data/MapRepo';\n\nclass App extends Component {\n  // Web3\n  portis?: Portis;\n  web3?: Web3;\n  userLoggedIn = false;\n  BN?: any;\n\n  // Contracts\n  standardBountiesInstance?: any;\n  tokenInstance?: any;\n\n  contractsConnected?: any;\n\n  contractEvents?: any;\n\n  // Database Interfaces\n  userMetadataRepo?: UserMetadataRepo = new UserMetadataRepo();\n  bountyMetadataRepo?: BountyMetadataRepo = new BountyMetadataRepo();\n  mapDataRepo?: MapRepo = new MapRepo();\n\n  constructor(props: any) {\n    super(props);\n    this.portisClicked = this.portisClicked.bind(this);\n    this.blocknativeClicked = this.blocknativeClicked.bind(this);\n    this.sendRoyaltyDistribution = this.sendRoyaltyDistribution.bind(this);\n    this.getUserPastEvents = this.getUserPastEvents.bind(this);\n    this.getBounties = this.getBounties.bind(this);\n    this.getBounty = this.getBounty.bind(this);\n    this.acceptFulfillment = this.acceptFulfillment.bind(this);\n    this.submitBounty = this.submitBounty.bind(this);\n\n    // Default INFURA provider for read access\n    this.setWeb3(\n      new Web3(\n        new Web3.providers.HttpProvider(\n          `https://rinkeby.infura.io/${process.env.REACT_APP_INFURA_API_KEY}`\n        )\n      )\n    );\n\n    // this.connectToMetamask();\n\n    console.log('web3 infura connected', this.web3);\n  }\n\n  portisClicked() {\n    return new Promise((resolve, reject) => {\n      const portis = new Portis(\n        'b3f16d56-4b6c-434b-9c90-9ce46d496013',\n        'rinkeby'\n      );\n      this.portis = portis;\n      this.portis.onLogin((walletAddress: string) => {\n        console.log('portis login callback, walletAddress: ', walletAddress)\n        this.userLoggedIn = true;\n        if (this.portis) {\n          this.setWeb3(new Web3(this.portis.provider));\n          resolve()\n        }\n      })\n      portis.showPortis();\n\n    })\n  }\n\n  async blocknativeClicked() {\n    const bnKey = 'd7603484-6a29-4dab-898b-f6a57f36e83d';\n    const main = 1;\n    const ropsten = 3;\n    const rinkeby = 4;\n    var assistInstance = assist.init({ dappId: bnKey, networkId: rinkeby });\n    this.userLoggedIn = true;\n\n    try {\n      // onboard visitors\n      const result = await assistInstance.onboard();\n      console.log('result: ', result);\n    } catch (error) {\n      // user exited onboarding before completion\n      console.log(error.msg);\n    }\n  }\n\n  async subscribeToPastEvents() {\n    console.log('subscribed to past events');\n    this.standardBountiesInstance.getPastEvents(\n      'BountyIssued',\n      {\n        fromBlock: 0,\n        toBlock: 'latest'\n      },\n      // @ts-ignore\n      (error, events) => {\n        console.log('BountyIssued', events);\n      }\n    );\n\n    this.standardBountiesInstance.getPastEvents(\n      'BountyActivated',\n      {\n        fromBlock: 0,\n        toBlock: 'latest'\n      },\n      // @ts-ignore\n      (error, events) => {\n        console.log('BountyActivated', events);\n      }\n    );\n\n    this.standardBountiesInstance.getPastEvents(\n      'BountyFulfilled',\n      {\n        fromBlock: 0,\n        toBlock: 'latest'\n      },\n      // @ts-ignore\n      (error, events) => {\n        console.log('BountyFulfilled', events);\n      }\n    );\n\n    this.standardBountiesInstance.getPastEvents(\n      'FulfillmentAcceptedPartial',\n      {\n        fromBlock: 0,\n        toBlock: 'latest'\n      },\n      // @ts-ignore\n      (error, events) => {\n        console.log('FulfillmentAcceptedPartial', events);\n      }\n    );\n\n    this.standardBountiesInstance.getPastEvents(\n      'RoyaltyFunded',\n      {\n        fromBlock: 0,\n        toBlock: 'latest'\n      },\n      // @ts-ignore\n      (error, events) => {\n        console.log('RoyaltyFunded', events);\n      }\n    );\n\n    this.standardBountiesInstance.getPastEvents(\n      'PayoutGenerated',\n      {\n        fromBlock: 0,\n        toBlock: 'latest'\n      },\n      // @ts-ignore\n      (error, events) => {\n        console.log('PayoutGenerated', events);\n      }\n    );\n    this.standardBountiesInstance.getPastEvents(\n      'OwnerAdded',\n      {\n        fromBlock: 0,\n        toBlock: 'latest'\n      },\n      // @ts-ignore\n      (error, events) => {\n        console.log('OwnerAdded', events);\n      }\n    );\n  }\n\n  async getUserPastEvents(userAddress: string) {\n    console.log('subscribed to user events', userAddress);\n    this.standardBountiesInstance.getPastEvents(\n      'PayoutGenerated',\n      {\n        filter: { owner: userAddress },\n        fromBlock: 0,\n        toBlock: 'latest'\n      },\n      // @ts-ignore\n      (error, events) => {\n        console.log('UserPast', events);\n      }\n    );\n  }\n\n  async setWeb3(web3: Web3) {\n    if (web3) {\n      this.web3 = web3;\n      console.log('web3 available');\n      // @ts-ignore\n      this.BN = web3.utils.BN;\n      web3.eth.getAccounts((error, accounts) => {\n        console.log(accounts);\n      });\n\n      await this.initContractInstances();\n      await this.subscribeToPastEvents();\n      await this.getUserPastEvents(\n        '0x8ECF64e7c55B0176e305F8e51E171A81C3D99B4B'\n      );\n    }\n  }\n\n  // @ts-ignore\n  async connectToMetamask() {\n    // Modern dapp browsers...\n    // @ts-ignore\n    if (window.ethereum) {\n      // @ts-ignore\n      this.setWeb3(new Web3(ethereum));\n      try {\n        // Request account access if needed\n        // @ts-ignore\n        await ethereum.enable();\n        // Acccounts now exposed\n        // @ts-ignore\n        web3.eth.sendTransaction({\n          /* ... */\n        });\n      } catch (error) {\n        // User denied account access...\n      }\n    }\n    // Legacy dapp browsers...\n    // @ts-ignore\n    else if (window.web3) {\n      // @ts-ignore\n      this.setWeb3(new Web3(web3.currentProvider));\n      // Acccounts always exposed\n      // @ts-ignore\n      web3.eth.sendTransaction({\n        /* ... */\n      });\n    }\n    // Non-dapp browsers...\n    else {\n      console.log(\n        'Non-Ethereum browser detected. You should consider trying MetaMask!'\n      );\n    }\n  }\n\n  async submitBounty(bountyId: number, data: any) {\n    if (!this.web3) {\n      return;\n    }\n\n    if (!this.userLoggedIn) {\n      await this.portisClicked();\n    }\n\n    const accounts = await this.web3.eth.getAccounts();\n\n    try {\n      await this.standardBountiesInstance.methods\n        .fulfillBounty(bountyId, '1')\n        // @ts-ignore\n        .send({ from: accounts[0] });\n\n      // returning will resolve the async/await\n      return\n    } catch (e) {\n      throw e\n    }\n  }\n\n  async getTokenBalance(address: string) {\n    return await this.tokenInstance.methods.balanceOf(address);\n  }\n\n  async initContractInstances() {\n    if (!this.web3) {\n      return;\n    }\n    this.standardBountiesInstance = new this.web3.eth.Contract(\n      StandardBountiesAbi as any,\n      process.env.REACT_APP_STANDARD_BOUNTIES_ADDRESS\n    );\n\n    this.tokenInstance = new this.web3.eth.Contract(\n      HumanStandardTokenAbi as any,\n      process.env.REACT_APP_TOKEN_ADDRESS\n    );\n\n    console.log('contract instances init');\n  }\n\n  async initEventListeners() { }\n\n  // Mass of blockchain actions\n  async getBounties() {\n    let bounties: Array<Bounty> = [];\n\n    const numBounties = await this.standardBountiesInstance.methods\n      .getNumBounties()\n      .call();\n    console.log('numBounties', numBounties);\n    for (let i = 0; i < numBounties; i++) {\n      const bounty = await this.getBounty(i);\n      bounties.push(bounty);\n      console.log(bounty);\n    }\n\n    return bounties;\n  }\n\n  async getBounty(bountyId: number): Promise<Bounty> {\n    if (!this.web3) {\n      throw new Error('no Web3');\n    }\n\n    let bounty: Bounty = {} as Bounty;\n\n    const bountyData = await this.standardBountiesInstance.methods\n      .getBounty(bountyId)\n      .call();\n    console.log(bountyData);\n\n    bounty.issuer = bountyData[0];\n    bounty.deadline = bountyData[1];\n    bounty.fulfillmentAmount = bountyData[2];\n    bounty.paysTokens = bountyData[3];\n    bounty.bountyStage = bountyData[4];\n    bounty.balance = bountyData[5];\n\n    const bountyDataKey = await this.standardBountiesInstance.methods\n      .getBountyData(bountyId)\n      .call();\n\n    bounty.metadata = await this.getBountyMetadata(bountyDataKey);\n    bounty.arbiter = process.env.REACT_APP_GIS_CORPS_ADDRESS as any;\n\n    console.log('bounty found', bounty);\n    return bounty;\n  }\n\n  async getUser(address: string): Promise<User> {\n    let user: User = {} as User;\n\n    const userStats = await this.standardBountiesInstance.methods\n      .getUserStats(address)\n      .call();\n    user.address = address;\n    user.bountiesWon = userStats[0];\n    user.royaltiesWon = userStats[1];\n    user.metadata = await this.getUserMetadata(address);\n    return user;\n  }\n\n  // Users can submit data to a bounty - requires a logged in user.\n  async fulfillBounty(bountyId: number, data: any) {\n    if (!this.userLoggedIn) {\n      return;\n    }\n\n    const fulfillmentId = await this.standardBountiesInstance.methods\n      .fulfillBounty()\n      .send(bountyId, data);\n    console.log(fulfillmentId);\n\n    this.acceptFulfillment(bountyId, fulfillmentId, 25);\n  }\n\n  async acceptFulfillment(\n    bountyId: any,\n    fulfillmentId: any,\n    percentage: number\n  ) {\n    await this.standardBountiesInstance.methods\n      .acceptFulfillmentPartial(bountyId, fulfillmentId, percentage)\n      .send({ from: process.env.REACT_APP_GIS_CORPS_ADDRESS });\n\n    await this.sendRoyaltyDistribution();\n  }\n\n  // Royalty Distribution\n\n  async sendRoyaltyDistribution() {\n    if (!this.web3) {\n      return;\n    }\n    const accounts = await this.web3.eth.getAccounts();\n    console.log('attempting to send from', accounts[0] || '');\n\n    const numBounties = await this.standardBountiesInstance.methods\n      .getNumBounties()\n      .call();\n\n    console.log('numBounties', numBounties);\n\n    for (let i = 0; i < numBounties; i++) {\n      await this.standardBountiesInstance.methods\n        .distributeRoyaltyFundsSimple(i)\n        .send({ from: accounts[0] });\n    }\n  }\n\n  // Database Functions\n\n  async getBountyMetadata(key: string): Promise<BountyMetadata> {\n    const dummyData: BountyMetadata = {\n      title: 'Bounty Title',\n      description: 'Bounty Description'\n    };\n\n    if (!this.bountyMetadataRepo) {\n      return dummyData;\n    }\n\n    return this.bountyMetadataRepo.get(key) || dummyData;\n  }\n  async getUserMetadata(key: string): Promise<UserMetadata> {\n    const dummyData: UserMetadata = {\n      name: 'Test User',\n      bio: 'lorem ipsum lorem ipsum lorem ipsum lorem ipsum lorem ipsum',\n      imgUrl: ''\n    };\n\n    if (!this.userMetadataRepo) {\n      return dummyData;\n    }\n\n    return this.userMetadataRepo.get(key) || dummyData;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"logo\" />\n          <LandingPage\n            web3={this.web3}\n            sendRoyaltyDistribution={this.sendRoyaltyDistribution}\n            getUserPastEvents={this.getUserPastEvents}\n            getBounties={this.getBounties}\n            acceptFufillment={this.acceptFulfillment}\n            getBounty={this.getBounty}\n            submitBounty={this.submitBounty}\n            kickoffBlocknative={this.blocknativeClicked}\n          />\n\n          {/* for debugging  */}\n          {/* <Button type=\"primary\" onClick={this.portisClicked}>\n            Login with Portis\n          </Button>\n          <Button type=\"primary\" onClick={this.blocknativeClicked}>\n            Login with Blocknative\n          </Button> */}\n\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: any, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nrender(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}